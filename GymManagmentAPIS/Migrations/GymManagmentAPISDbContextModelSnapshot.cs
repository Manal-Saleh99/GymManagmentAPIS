// <auto-generated />
using System;
using GymManagmentAPIS.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymManagmentAPIS.Migrations
{
    [DbContext(typeof(GymManagmentAPISDbContext))]
    partial class GymManagmentAPISDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GymManagmentAPIS.Models.Entity.Admin", b =>
                {
                    b.Property<int>("AdminId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AdminId");

                    b.ToTable("Admin", (string)null);
                });

            modelBuilder.Entity("GymManagmentAPIS.Models.Entity.Client", b =>
                {
                    b.Property<int>("ClientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("ClientId");

                    b.ToTable("Client", (string)null);
                });

            modelBuilder.Entity("GymManagmentAPIS.Models.Entity.Coach", b =>
                {
                    b.Property<int>("CoachId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdminsAdminId")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<bool>("IsAvailableCoach")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Specialization")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("CoachId");

                    b.HasIndex("AdminsAdminId");

                    b.HasIndex("DepartmentId")
                        .IsUnique();

                    b.ToTable("Coach", null, t =>
                        {
                            t.HasCheckConstraint("CH_Coach_Age", "Age>= 18");
                        });
                });

            modelBuilder.Entity("GymManagmentAPIS.Models.Entity.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdminsAdminId")
                        .HasColumnType("int");

                    b.Property<string>("ArabicName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("EnglishName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("DepartmentId");

                    b.HasIndex("AdminsAdminId");

                    b.ToTable("Department", (string)null);
                });

            modelBuilder.Entity("GymManagmentAPIS.Models.Entity.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AdminId")
                        .HasColumnType("int");

                    b.Property<int>("AdminsAdminId")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("AdminId");

                    b.HasIndex("AdminsAdminId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employee", null, t =>
                        {
                            t.HasCheckConstraint("CH_Coach_Age", "Age>= 18")
                                .HasName("CH_Coach_Age1");
                        });
                });

            modelBuilder.Entity("GymManagmentAPIS.Models.Entity.Subscription", b =>
                {
                    b.Property<int>("SubscriptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientsClientId")
                        .HasColumnType("int");

                    b.Property<int>("CoachsCoachId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentsDepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<int>("DurationInDays")
                        .HasColumnType("int");

                    b.Property<int>("EmployeesEmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("tinyint(1)");

                    b.Property<float>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("SubscribtionDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("SubscriptionName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<int>("SubscriptionType")
                        .HasColumnType("int");

                    b.Property<int>("TrainingHoursPerDay")
                        .HasColumnType("int");

                    b.HasKey("SubscriptionId");

                    b.HasIndex("ClientsClientId");

                    b.HasIndex("CoachsCoachId");

                    b.HasIndex("DepartmentsDepartmentId");

                    b.HasIndex("EmployeesEmployeeId");

                    b.ToTable("Subscription", null, t =>
                        {
                            t.HasCheckConstraint("CH_Subscription_Price", "Price>= 20");
                        });
                });

            modelBuilder.Entity("GymManagmentAPIS.Models.Entity.Coach", b =>
                {
                    b.HasOne("GymManagmentAPIS.Models.Entity.Admin", "Admins")
                        .WithMany()
                        .HasForeignKey("AdminsAdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagmentAPIS.Models.Entity.Department", "Departments")
                        .WithOne("Coachs")
                        .HasForeignKey("GymManagmentAPIS.Models.Entity.Coach", "DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admins");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("GymManagmentAPIS.Models.Entity.Department", b =>
                {
                    b.HasOne("GymManagmentAPIS.Models.Entity.Admin", "Admins")
                        .WithMany()
                        .HasForeignKey("AdminsAdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admins");
                });

            modelBuilder.Entity("GymManagmentAPIS.Models.Entity.Employee", b =>
                {
                    b.HasOne("GymManagmentAPIS.Models.Entity.Admin", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagmentAPIS.Models.Entity.Admin", "Admins")
                        .WithMany()
                        .HasForeignKey("AdminsAdminId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagmentAPIS.Models.Entity.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Admin");

                    b.Navigation("Admins");

                    b.Navigation("Departments");
                });

            modelBuilder.Entity("GymManagmentAPIS.Models.Entity.Subscription", b =>
                {
                    b.HasOne("GymManagmentAPIS.Models.Entity.Client", "Clients")
                        .WithMany()
                        .HasForeignKey("ClientsClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagmentAPIS.Models.Entity.Coach", "Coachs")
                        .WithMany()
                        .HasForeignKey("CoachsCoachId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagmentAPIS.Models.Entity.Department", "Departments")
                        .WithMany()
                        .HasForeignKey("DepartmentsDepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagmentAPIS.Models.Entity.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeesEmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clients");

                    b.Navigation("Coachs");

                    b.Navigation("Departments");

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("GymManagmentAPIS.Models.Entity.Department", b =>
                {
                    b.Navigation("Coachs")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
